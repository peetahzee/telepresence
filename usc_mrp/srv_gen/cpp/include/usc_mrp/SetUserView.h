/* Auto-generated by genmsg_cpp for file /home/ptz/telepresence/usc_mrp/srv/SetUserView.srv */
#ifndef USC_MRP_SERVICE_SETUSERVIEW_H
#define USC_MRP_SERVICE_SETUSERVIEW_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace usc_mrp
{
template <class ContainerAllocator>
struct SetUserViewRequest_ {
  typedef SetUserViewRequest_<ContainerAllocator> Type;

  SetUserViewRequest_()
  : viewName()
  {
  }

  SetUserViewRequest_(const ContainerAllocator& _alloc)
  : viewName(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _viewName_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  viewName;


private:
  static const char* __s_getDataType_() { return "usc_mrp/SetUserViewRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "9eef62b1d4fefdd02c9f6225c0543a6c"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "9eef62b1d4fefdd02c9f6225c0543a6c"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "string viewName\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, viewName);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, viewName);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(viewName);
    return size;
  }

  typedef boost::shared_ptr< ::usc_mrp::SetUserViewRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::usc_mrp::SetUserViewRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct SetUserViewRequest
typedef  ::usc_mrp::SetUserViewRequest_<std::allocator<void> > SetUserViewRequest;

typedef boost::shared_ptr< ::usc_mrp::SetUserViewRequest> SetUserViewRequestPtr;
typedef boost::shared_ptr< ::usc_mrp::SetUserViewRequest const> SetUserViewRequestConstPtr;


template <class ContainerAllocator>
struct SetUserViewResponse_ {
  typedef SetUserViewResponse_<ContainerAllocator> Type;

  SetUserViewResponse_()
  {
  }

  SetUserViewResponse_(const ContainerAllocator& _alloc)
  {
  }


private:
  static const char* __s_getDataType_() { return "usc_mrp/SetUserViewResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "d41d8cd98f00b204e9800998ecf8427e"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "9eef62b1d4fefdd02c9f6225c0543a6c"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    return size;
  }

  typedef boost::shared_ptr< ::usc_mrp::SetUserViewResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::usc_mrp::SetUserViewResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct SetUserViewResponse
typedef  ::usc_mrp::SetUserViewResponse_<std::allocator<void> > SetUserViewResponse;

typedef boost::shared_ptr< ::usc_mrp::SetUserViewResponse> SetUserViewResponsePtr;
typedef boost::shared_ptr< ::usc_mrp::SetUserViewResponse const> SetUserViewResponseConstPtr;

struct SetUserView
{

typedef SetUserViewRequest Request;
typedef SetUserViewResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct SetUserView
} // namespace usc_mrp

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::usc_mrp::SetUserViewRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::usc_mrp::SetUserViewRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::usc_mrp::SetUserViewRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "9eef62b1d4fefdd02c9f6225c0543a6c";
  }

  static const char* value(const  ::usc_mrp::SetUserViewRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x9eef62b1d4fefdd0ULL;
  static const uint64_t static_value2 = 0x2c9f6225c0543a6cULL;
};

template<class ContainerAllocator>
struct DataType< ::usc_mrp::SetUserViewRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "usc_mrp/SetUserViewRequest";
  }

  static const char* value(const  ::usc_mrp::SetUserViewRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::usc_mrp::SetUserViewRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "string viewName\n\
\n\
";
  }

  static const char* value(const  ::usc_mrp::SetUserViewRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::usc_mrp::SetUserViewResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::usc_mrp::SetUserViewResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::usc_mrp::SetUserViewResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::usc_mrp::SetUserViewResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::usc_mrp::SetUserViewResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "usc_mrp/SetUserViewResponse";
  }

  static const char* value(const  ::usc_mrp::SetUserViewResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::usc_mrp::SetUserViewResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
";
  }

  static const char* value(const  ::usc_mrp::SetUserViewResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::usc_mrp::SetUserViewResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::usc_mrp::SetUserViewRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.viewName);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetUserViewRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::usc_mrp::SetUserViewResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetUserViewResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<usc_mrp::SetUserView> {
  static const char* value() 
  {
    return "9eef62b1d4fefdd02c9f6225c0543a6c";
  }

  static const char* value(const usc_mrp::SetUserView&) { return value(); } 
};

template<>
struct DataType<usc_mrp::SetUserView> {
  static const char* value() 
  {
    return "usc_mrp/SetUserView";
  }

  static const char* value(const usc_mrp::SetUserView&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<usc_mrp::SetUserViewRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "9eef62b1d4fefdd02c9f6225c0543a6c";
  }

  static const char* value(const usc_mrp::SetUserViewRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<usc_mrp::SetUserViewRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "usc_mrp/SetUserView";
  }

  static const char* value(const usc_mrp::SetUserViewRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<usc_mrp::SetUserViewResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "9eef62b1d4fefdd02c9f6225c0543a6c";
  }

  static const char* value(const usc_mrp::SetUserViewResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<usc_mrp::SetUserViewResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "usc_mrp/SetUserView";
  }

  static const char* value(const usc_mrp::SetUserViewResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // USC_MRP_SERVICE_SETUSERVIEW_H


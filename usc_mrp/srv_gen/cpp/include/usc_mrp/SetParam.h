/* Auto-generated by genmsg_cpp for file /home/ptz/telepresence/usc_mrp/srv/SetParam.srv */
#ifndef USC_MRP_SERVICE_SETPARAM_H
#define USC_MRP_SERVICE_SETPARAM_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace usc_mrp
{
template <class ContainerAllocator>
struct SetParamRequest_ {
  typedef SetParamRequest_<ContainerAllocator> Type;

  SetParamRequest_()
  : topicName()
  , value(false)
  {
  }

  SetParamRequest_(const ContainerAllocator& _alloc)
  : topicName(_alloc)
  , value(false)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _topicName_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  topicName;

  typedef uint8_t _value_type;
  uint8_t value;


private:
  static const char* __s_getDataType_() { return "usc_mrp/SetParamRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "642c6905be158f7771bdb97607d3ce76"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "d6390910c6b702591d46ea53f6802422"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "string topicName\n\
bool value\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, topicName);
    ros::serialization::serialize(stream, value);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, topicName);
    ros::serialization::deserialize(stream, value);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(topicName);
    size += ros::serialization::serializationLength(value);
    return size;
  }

  typedef boost::shared_ptr< ::usc_mrp::SetParamRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::usc_mrp::SetParamRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct SetParamRequest
typedef  ::usc_mrp::SetParamRequest_<std::allocator<void> > SetParamRequest;

typedef boost::shared_ptr< ::usc_mrp::SetParamRequest> SetParamRequestPtr;
typedef boost::shared_ptr< ::usc_mrp::SetParamRequest const> SetParamRequestConstPtr;


template <class ContainerAllocator>
struct SetParamResponse_ {
  typedef SetParamResponse_<ContainerAllocator> Type;

  SetParamResponse_()
  : success(false)
  {
  }

  SetParamResponse_(const ContainerAllocator& _alloc)
  : success(false)
  {
  }

  typedef uint8_t _success_type;
  uint8_t success;


private:
  static const char* __s_getDataType_() { return "usc_mrp/SetParamResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "358e233cde0c8a8bcfea4ce193f8fc15"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "d6390910c6b702591d46ea53f6802422"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "bool success\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, success);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, success);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(success);
    return size;
  }

  typedef boost::shared_ptr< ::usc_mrp::SetParamResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::usc_mrp::SetParamResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct SetParamResponse
typedef  ::usc_mrp::SetParamResponse_<std::allocator<void> > SetParamResponse;

typedef boost::shared_ptr< ::usc_mrp::SetParamResponse> SetParamResponsePtr;
typedef boost::shared_ptr< ::usc_mrp::SetParamResponse const> SetParamResponseConstPtr;

struct SetParam
{

typedef SetParamRequest Request;
typedef SetParamResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct SetParam
} // namespace usc_mrp

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::usc_mrp::SetParamRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::usc_mrp::SetParamRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::usc_mrp::SetParamRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "642c6905be158f7771bdb97607d3ce76";
  }

  static const char* value(const  ::usc_mrp::SetParamRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x642c6905be158f77ULL;
  static const uint64_t static_value2 = 0x71bdb97607d3ce76ULL;
};

template<class ContainerAllocator>
struct DataType< ::usc_mrp::SetParamRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "usc_mrp/SetParamRequest";
  }

  static const char* value(const  ::usc_mrp::SetParamRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::usc_mrp::SetParamRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "string topicName\n\
bool value\n\
\n\
";
  }

  static const char* value(const  ::usc_mrp::SetParamRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::usc_mrp::SetParamResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::usc_mrp::SetParamResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::usc_mrp::SetParamResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "358e233cde0c8a8bcfea4ce193f8fc15";
  }

  static const char* value(const  ::usc_mrp::SetParamResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x358e233cde0c8a8bULL;
  static const uint64_t static_value2 = 0xcfea4ce193f8fc15ULL;
};

template<class ContainerAllocator>
struct DataType< ::usc_mrp::SetParamResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "usc_mrp/SetParamResponse";
  }

  static const char* value(const  ::usc_mrp::SetParamResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::usc_mrp::SetParamResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool success\n\
\n\
";
  }

  static const char* value(const  ::usc_mrp::SetParamResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::usc_mrp::SetParamResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::usc_mrp::SetParamRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.topicName);
    stream.next(m.value);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetParamRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::usc_mrp::SetParamResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.success);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetParamResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<usc_mrp::SetParam> {
  static const char* value() 
  {
    return "d6390910c6b702591d46ea53f6802422";
  }

  static const char* value(const usc_mrp::SetParam&) { return value(); } 
};

template<>
struct DataType<usc_mrp::SetParam> {
  static const char* value() 
  {
    return "usc_mrp/SetParam";
  }

  static const char* value(const usc_mrp::SetParam&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<usc_mrp::SetParamRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d6390910c6b702591d46ea53f6802422";
  }

  static const char* value(const usc_mrp::SetParamRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<usc_mrp::SetParamRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "usc_mrp/SetParam";
  }

  static const char* value(const usc_mrp::SetParamRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<usc_mrp::SetParamResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d6390910c6b702591d46ea53f6802422";
  }

  static const char* value(const usc_mrp::SetParamResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<usc_mrp::SetParamResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "usc_mrp/SetParam";
  }

  static const char* value(const usc_mrp::SetParamResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // USC_MRP_SERVICE_SETPARAM_H

